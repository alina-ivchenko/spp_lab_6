<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonTestTask.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxMSEhUSExMWFRUVFRUXGBgXFxcWGBUWFRUWFhUXFRYY
        HSggGBolHRUVITEhJSkrLi4uFx8zODMtNygtLiv/2wBDAQoKCg4NDhgQEBotHR0dLS0tLS0tLS0tLS0t
        LS0tLS0rLS0tLS0rLS0tLS0tLS0tLS0tKy0tLSstLS03Ny03LTf/wAARCAC3ARMDASIAAhEBAxEB/8QA
        GwAAAgMBAQEAAAAAAAAAAAAABAUCAwYAAQf/xAA7EAABAwIDBQYFAQgCAwEAAAABAAIRAyEEEjEFQVFh
        cQYTIoGRoTKxwdHwBxQjQlJicuHxFaKCksIk/8QAGAEAAwEBAAAAAAAAAAAAAAAAAQIDAAT/xAAiEQAC
        AgMBAQADAAMAAAAAAAAAAQIRAxIhMUEiUWETFCP/2gAMAwEAAhEDEQA/APlTqyrDwd8IRr1axp1MxxiR
        6prNRodlMlhGqsoUr2MdVT2baMxAMy02TDuHyfCkkPBWXMocRHPUeqn+yDdC92fUcDDp/PYpsymHXDWv
        6Wd5hLdjuNCJ+Gjd5rsgIh9xuO8FOS1uhBHUFU1cKCLEfNI7+BX9EeLwJbukHQ/dBup2mFoqNTJLXiW8
        PnBQ21tmlrTUpXZExw4rKXwDjQke2yi1inTGYSrssCQmoAOWKDqRTOnDRmOhhFU+7z30KOrBYmo4c6wi
        aVEp7ia9OmBAF1DD4qm4RAnei4sCYJQpoxrIvyXVa9NrZ/Agv+SGUzp8kmjGsZZRF1W1oPiNmj3K7CO7
        wZ58DdY3oOrjw90AWFgPqpt0NGNhB8TrI3DYUnQefDopbPwwjMf9o8io7wsGUe6MQv8AQFXpNZr4nfLq
        g3UnO0BJTtmzWt8VRyC2hjWgZWCB7pmwxX66KqmHazm72CnhaRcxylQwbniTZvE/TimNLDww5Qihcnhl
        n0CNVU5ib18OShH0ExKgINVrV65qsptWNRDKvDTROReQsLQI6mq3MRrmqtzEQUBZVyILFywKMkEThKmU
        /EW9BI8whAraZTj0bDs8ZqD4HSD4mgA34wfonxwgDpD8vI2HqsfsBoNVhY4ZgRY2kbwtvtB7qbuR43CV
        jQXSTMPW4SOIgojuX/ygpdSxrd4cw/zU3Eeo0R1DaABg1eneMHs4Qlss0yzv6g+KnI8io1HMI+EtPmQi
        HV7WyOH9Lo9ih6rZ0kJWAWbTp+GR+QhtiYs5ywnwuGh9FfiAdOoQ2DoDU/EI9Cft8lOVIZdQu7U4M0Kg
        c0Q1wt5E/dLW40tOaLHULXbbd3zGgtsHAzv0mPdZXbADdNJtzG5PDJ8EcCutiJEbr/gQRrunXRRpVd3A
        +y9ySCeEfNWsmSq4txMkqWGxhBBQbtOhVlNmXmEbMHVsRMXmSiq9CWFwkWvv+yTCpC0ezMUHAgxcQVHJ
        JrpSCsbbJgYWJkH6RZJqbYfCcUyMuUGAPF5g39p9AqO7kyPzRc+6srGA0wlblKYtq1To23slWGqRYdPu
        Z4I79tDWyG2G8kmSqWLQR/x1Z+pa0dZ+SidnUaRl7jUduA08wh342vVOVoyti+5QD2ssDmfvduHTiihv
        y8snjMU5xjTkNwTLD4cijpqlmCw5cc+6fVavDUc1MAJo+kslJUjKV8OgK2HWpxeBI3JZXwyJMzNaio0h
        Cb18Og3UIQsJCFW5iuAXsJkxWgQhRKKfTQ72wmAVZV6vVyxqMUrKYXkKbDCYIz2G8Cqw8HBfTcWzM0OG
        8L5Myo3h6FfSuzNYvosObS19/VLIK4wNoEkOb5ttb5KTKNN3hDtf4XWn7HmEwx1ACbgH80SjEYR7rt6h
        zb+oCSzoX7LH7JLCHMcRP8Ji/IHQ9LHhKIpB448CIgg8wp4DvPhqCx0cLtPI8Ci24nLZ7cw0BB8TRuid
        QOBmOSVsD6KzLj+fmijVGUg8x5phjssZm+IbyP4Sdzh/CT6HdKX4mrmZbdr7Qfp6cVGTspHgLjcRLbXh
        ZDHYkuKe7QqwDz9lm3UyT63VMMRMrPWNi4XrnlsHjNuVv8K8kAQN4/2gaz1dEC58a8UXhjmBafzol9N4
        IPqPzyCnTrwsYtxLCL848ty9wmIynVE0Wl9uH3Q7KH50/PdKwr3hotnYqR5O9xb3cjqdUAR+BJtntIDp
        tMN980/9EwoMk20FzOnnyOnmuScenVF2hvSa0jxWA18tyaM7sAZtdQ0CY4WSBtSNDrcnf5cEfgK8u/JQ
        j+2CRbiXVHtIjK0nSYJ/uj7oOi5oOW08YsOSePp5raDh90p2iylR5ngqbAQ7o1i9oYwxO/gtZsLCQyCZ
        PErJdlTmuRC3+BAAEKuL+kMvtAmKwQKSYzZvJa57UHXoq1IkYTE4KEsxGGW3xeFCS4rCpHEZMyNakVW0
        J5iMMgKuHS0EFlUVgrqjIVFROhaBCV6ucxciYxRK4PXpXkIhLKb7r6p2GaHUZB6jmvlVJt19F/Tuu5oc
        0i2oMoPwAx7Quh7SJjQ+apwzGON5DgbuafchMdqEOJEXj1WadinMIMW09DCgdPxGzw4y7w8e/wDlB49o
        IOUCOHPpuQdHEZmgsBPkbHgpMzO3EHmDryKAKoBh0y2xgiDBzNOrSNCFQyLlggxdms8cu8iN2o57mWJw
        zjfK6eQJHqgazTmAPxa3tmj5O/NdUY6Eu0sNIsbTbjAIBHUX+e8LP4vw+a1dcZszSLk33eKR4usG4Go0
        uBOf2iwm0XzQeRP0163VYOic+gGIGTzbrxm8+/sgTqnG1cPlDDuLSehkjL5EH2SioVZdJSIi11NpVYUq
        Z/PJEUZYHEQTaZifr8lfiaeVwI0ifW4+iDwVnNtMEef5C1W3KLA0GAL+ktYCOV2Ef6UpOmUiuFOGoEgN
        OpGYncAbX9P+yPH8g4+vCfWfMLzZQ7wANIyjX/5B6cPujTh4BMQNObo1mNbzy6rmk+lo8Ow9EDU34C5H
        XcER3gZ8I9T9oVTaBbz6X6KNSm7gb8ilTHaL3bUd8LInysh6roNzmJPAFDAZTz3lQquvIMfVP9A6Rq9i
        VA2JsTwW0wGLkASvl1DGnzWs7O13hsu0OieDq7ITVs2gqqD3JXTxXNX9+nWQVxJV2pVi6aYPqoKu5NvY
        NRHiaSAqUk3xRS2q5bY1C+tRQNakmzwhK9NMAUli5FGmuWsx86yjj6X+wXAN/q9APqvFMNTmCMO1ptDj
        5gfQrWbCxTaLZDTI3zP0CzWAoSQtNQwpa2OWp3ISCjSVMWyoM2hhL6rHHwtjiCbdQYuvKFOGiDpvP04I
        Orj5dDbFQfB4stBAP8R43t7zKJabwGierr+hV+Hwtszo8xf0UmQDYXHE/kKWxajq5EDwNuIvm+hUTX/h
        0A3E5gLaZXeW+VdGYEzEakQ0eoiFCrgHObIqRuIfmcOlhHugjMqGBbWmGgTNzMm0Q8cYtM/RYva2JLK2
        V0ggxPETqeP+/Lc7Le6m/K9gIEXBLQOBa8wBusY6jVZ79Q9nd29tZglpPMXngbieIsVXH70nL+BW2dk9
        5hQ9syHOdB5tad245fOeIXz14X2SmxxwtNwHiNMm4MEth7MwE8T68F8rrYJzXZXC4Mdcrsp66FPjfqFk
        rQtDFZSppg/CZDlO4b+u7lIhWfsf7sONrkHoGyZG7cq7CUX9mcIKldjTYGZPC0fULQ9vMOGUmATpc/3O
        Jd8wfIoTszhzSe2pez3MI4NgG+7+b0Wh/UaiKlOlTbLnudDQJ0uATy09Vzt/9EUr8Sv9P8OX0HOI8IsC
        SAAB+G/+YKe8954YDQeAJI5Xsfy60GydiNoYZlKpqACdA1p87A9f9V08BhQbVGTAHxNJG+wNj6KUlcrG
        TpCWswmSXGJkDNJHVCOJF5J5yVpNo7La1uam5ruRcI9zbyWcc3NIkSNWzu3xx6fNI1Q8XZ2HxInxBrhw
        I+SH2xgKTxmpk0n8CZaeQJ06z0BVJEG5VeKxBLYC0W0xpRVA2Ce5jw2oI5nQr6NTeBRaGkHovnWy2vc4
        McMzeB3c2ncvoWEw4p04F+f5vXQ2qOZJ2cMTCIbi7JViK0Kj9sXO3RarHhxag/EpL+1Kqpi0VNg0Glep
        KBqIZuKlel8p1IVxLVRWUu8Q1aorKQjRU4LlWXrkbFo+ayraJuqAiaAlXAP9j0xMpvisRaEr2Y20I6o1
        TkxootxONLhAsIQWF+L4vF8unNVGtFt59uaNwWDm569EkqoaPo3GIcBrJ5rsPVBvInj/AISrHYnLYGyE
        G1g0blBQb8LuSRpHYh0gSAOPxQOk2TnFbdwmFYC8lxI/lO4a21HmVgMHtOpXqhjWyCQBynfrdR7R7OLM
        Y3DuJeDBudfDMfNUx4+0yOSSqzRP/UWhMtwzngWk5R6AG3VN8Ft/AbRb+z1AWl2jalndWu0J5LH43CU2
        CWtAgaRpCV06DazDLQ0gxI0ndPsrPEiKyWfV8F2brUKD6IqGoL5HaECBkm+ogX/2sNUwPe1KjXDK+WkA
        aNL6eZ+ugDh5Sth+l3ap1cOwlYzVpDwuJEvp6X4uBieqv7YYAU6zKjYb3ksdA1uSDbV0u9FPWiil8MDt
        PDHMA5sn4iBqYDBlH/kfZS2dgi7R9nZpMSSCReOBh2vBOdo4YzYzvk75GWOQloBO/XcoYIkvBDddZGvh
        cS3gPiI8ykch6OwWzRUrspU7OLXh542a01CN+gI6Hy3O0MLh8HSOKqgfumCCbmR8LW87gQlfYmhOJqvd
        BIa2NbB0zY6XBSH9ZNs5q1HCg+Fo7144knKwH0cfRFR2ZNyozW2tpV8e4vrP7umT4Kc2HCf5jzPkl7+z
        ZyktN43b1La1WQzI0kTextaBHnCb0q2RviMCLcdL/VdSjwg5MD7JOrvc6jTAJaDIOttw4qX/AD2Rxa4E
        OBvuIITf9KsK6piK9cDwxHm4g/Ie6v7X7Jp580AEuJ6+i5cmu3TqxydGdO0s9/yem4IzCPzJXXwAYbWB
        +qK2eb3+SWUVXB4yfjNBs/DS8Rdax5hobMfmqR7CHiC09bAB7bGClXgr9MljneIgqprkdtnZzqd5SU1S
        ptFE7CqlZBVsWoVKiCrLJBDBjldTxySkqJrwno3DQDFSpZ5SOlikWzFWTJiNB5IXJf369TbCUYRoRNBD
        MKJprqJDfA1YTamJukmFCdYIAC5UpjxAa9EzmKZ7PqeG0oLaTZ0KrwD4tKFWhrpk9p1CZuldGgXu3kJh
        i6bimWwdnOIJAn8lBPVBfWNOx4pU35TGY6Ty4Horf1M2U/8AdY2iJdT+KBMNEkO6AyD1STaOEqtOYAti
        +pv5GDCd7G7YZR3dYZgeFxzgQJ6FLFtO0CUfhnDtKniGWdldFxw49QgqBbh6bhnzl0zoNdd6120eyuzs
        Qe8pV20CYJAc1rZ4FpsDfcu2V+m+HJBq4rvY1awgDoSN/mrvMmQ/x0Yfsxtc4fG0sQNGuh3NjrP9jPkv
        tPbF7a1OkAZL3tIymJmLg8LifJfLO3OyaWGrEUgGsLYAFwCLXPHQpv2f2s+pRbnPwNDW8gP9/NSySuKa
        LRh2hvjaQPwncBN9xkDid3uqsE62oiTxm8zYfnpKHbinVIA004X6nX8srW0CwZQDu+4g/f8A1xNnWo8N
        B2XxjKNZ4MNFWIN4zDUSdOnJfMO2znV8fVc25NTI3fMABoHn81oquJmW7zpE/FyjQ6enNY/ZzyzEtzTZ
        +7f9V1YZPrObJDqC6TcXREOw9SP7HOHsiMNsXG41waKTqbCYL3gsA8jc9F9Nqdr6bGgZTIA152+K4jml
        eP7S1nt8FQMaQT4GsJBB3zLvMD0TLNJoR4kmEPdR2Xhe4py58XIEkk6udCxdPFGtVLnXJPHxLzEZ6z5J
        Jn+pt/8A2dpyC0ux8DkbOQX9fkpzdK36PD0W7QwhNPTJzIukQcQ5fQcZTzMuGDrr6BZxuzMz/wDCSE/g
        zQd2ba55BJgclsaQAFjJWdwcUxkAAXYwviQ+OSskTbBu0+IfPJZ2m4ldtSvUmHElD06nFwHzSygxozLq
        qFe9WOrt3eJL8TjeEBBQC5E6r0DVqLqmJnehalROog2CGVlc3Epc1yi6qjqHYb/tnNckvfLltBdgZqIY
        qQ1XUxzC6CQwwr04wtRJ8KBxCbYUglJIKYTXYDZVUcLJ0TCnSHVG0KQG6CpjgbcJpLZC02xKUCMovpIQ
        +HfIiEdSqx15FRk6KrqL8Zs5jhz3icqx22tltbOUCOFgD6EmecLcYfFj+Inz0+a6thKL53nUttB6yVoM
        WSPlRqva6AJm2+TbSzZI6H0T7D0yB3hIDgAfiA+Kwm+g/lbyunuJ2KLkMA5AgQOOmqR49jaZh+ZoJsS5
        pA00sJPJVfREZ3bbnV6gAB1Aj880dQJYO7APhF90uO4b5DVrdl4LCmBSBe7lYA6Hggu1XZkYdjXkwXzk
        F7nVwnSbH81Vu/xSKR51vp3Z+CASJkz53ty3n6Jvii2NQd8NPXcRf/CyFPawaMjRMCJPuIO7X2VVTaFS
        0ZoFrgmdbmdZ1vxPFT/12/Sn+X9Hm0sQWVCJgDeBw5Lw7GdiGd40eOb5RZ1gZG++vK6GxmI7whzmnw35
        kkmGi9ySQOK+st2H3dBlUDI4saSHXymJM7pGkngmalBWkI5Rk6ZgcMHABtXLFiM7TccCRvtqP8KjH7Oc
        fEzM1toP7w+cgxHIhHbX2g8Pc0tZUJuxrW+OBczE6WFrJz2YwTqoDwwiRcS0HzaT56Smi/pOXBLsLZpB
        kx/cCb8zf5p33uUQ0TzJj7kp/idmtpiTlni6J9SEhxOYnwif7Yd8ip5LsOOitjnGZPpp91KgA2XEqFFj
        iYyOB9Poo7XoBtO5c226Hexj5pYR70aclXBNtPtN3Z8IB8kixfa2s82IHQKnG4fMbODuXwu9Dr5EpWKB
        mIvw3+i6lwkol9fadV9i8+w+SppuKtp0VYaaDkPqSbWQuIcpuCqesgNFBcoF6sc1VFicR2e51W5yk6mV
        SQUyQrZOVyhK5agWWBSCgCpohCsO5OMBrdIKb4TPDV0GjGoo4kCwV37QUloPRtHqptFEN8PjANbIoYqd
        NTwKRZSUdhHBgvZv/Z32HJI47DKWo1ZM6xGtySOoFh5kJts17SQDLvIR8nD3S3B03VBOXK0aTA+dh5XT
        jC06Y3jmSTHnx6E+SCxNGlkTHw2dTqNggcxA+iy2O7D0qtTM6p3cTlb4YB3OALVrdn1YAE26Bo9/sj+k
        Rzv81fS0QU6MdsnYXdPp/wD6JawkOtlzndpYQtdtrY9PFUO7qAO3gnVrhoRwI4hetoMbcMFzNrSeK9qY
        oNEAAD0TQhqCUrPjG3Oz9XC4kNPipvJAJA4SIda8bivHvZlIBbIBidJi08l9G7Q4llSm5lVrS0gTOo5t
        J0PAr4zst9JuMio7NSDwb6Og2DjoflZK8ezs6cefWNM+hfpv2THhxVaSTBYHexA3L6PtGmx7MpzaRAn3
        i0JFs3bOcZg5pB+nIJwzHT+aJq+HLJ9sQYLZTKfgp0coEkPdFiddU3w1EMJNrCJkX9kTUqCJJ9bJDtrb
        wpCBB6nL7kZfUhT0UXYXNyO2i5lQkOY4j+h4J9GhJe4w0w0uBn+JoP2+SUY/HUq130yw2hwOTXg8TT8h
        cqWBwzwfC/vB/V4agG7xDXzSSr0eKfhr8Bhg0fEHcj9jok3aelmERB3A/wAX9p3o3D1S0XJ89R1Qm0MQ
        SCIkH8uDY+iCaYao+WbRbchUNO43HPUdCtZtjZzHy8eF3ESWu6jUHp6LJVgWuIOoTUPF2XMCkWKulUVn
        ehSZVUVPpKh1FFl68hFMzQvfSUMiY5F53QTbCNAOVD1KSctw4UjhAnUhHGzPGkuTo4Ncn2J6iAOUw5Dg
        qwFOKmWtKNw70uBRdAoMZDzCVU1orPYaqQnGHxCSSCmOMPTAEkxJhGYSoCc2UZRoTqT1Og3kpL+0SQB5
        eaKq1fCGbtXc+A6WSoYcVNoZrl8NFs27+2k3Vx5ojBbUYPhbJ53d57mnlfyWRqYnMbGALTwHBv5JXv8A
        yAYIaYHHeUbBofQaW1nTJIbyGvnwTjBbZbYZgSbazdfH/wDkSTYynuz9pZADv/0sp0K4H12nWDhYpZty
        jWy/uYLjxMRz59FjMN2lcN9lotm9q2EDPvt0VVkTJ6tC2r2ae+TWqFxO7RrfLf8A4Qbux9EEw3daIm0b
        +Oq2R2pScYDhpP56KirjGNN3NHmg2MmJWdlmEeEuabQWkt0HJPdmYM0WfvKheeLoHySvH9padMgNIcfY
        JHje0T6hIm3BK5pA1bGW3u0RbLWgQNQVksVtIvJyktncT9TYjk5A7TxxLtUHTqyoSk2XhBINY1wdMFp4
        s8B826egC0OygRG/p4T1yi3ok2CqwE0o1xCnZRo0Dq4jxGRpm4cnDcqtJafwbkiftIg8ftw5hEOxMtAB
        tFuXLonXSbVCTb2JyOkdCNxG8QsrjG+MxcG432OiebcokmSktd4hvSFVeCr0HJXrXLwuVeZCilhjCuNR
        Dd6vM6XUNhWde95CHaSdFYcMVtTWWDEomlUQTKMK3vIRoWwsrkKK65EBllIFRXLoIEgURSqIWVOm5BhT
        GNGrBTSjW0SJhRlB6VoYeUq+/wBPRSxeKlojgJ6DRKhiNAF3eWgpKHPauNVFJxe7xFU1SvaL7Eo0Gxma
        7WhW0MSXdJ+6QVKyMo4i10HHgLGlbaBnKPNM9l4wxBKzbCB4iURQxnD8CSgmvZjpIIOlvJU4zam4rPtx
        0GVXiMTmut0GqGLsZJ1U/wBrg6pEa8KdSvIQHoJxeIlyuoVErFRXtrrNBTHVKtwV7sSY1SA4zKoO2jO9
        CMAOQ4dXM6pngMRu/LrNYetKcYKrC1UzN2Mdr08zVise0gxwWsxWL8Kye0q1yqxJNgZeuD0M+qo96moG
        wQ6qr6AlAsKKo1FqDsN6DQFY6og6LpVznJaDZ5UcqwZXOVbrI0CyRXKrvFyNGsRlcuXKpM8XoXLkDFrX
        K5lVcuShLRVK51UlcuWGIkrg+0LlyASAbdWueuXIGIOfK9bUhcuWMTGIleCpC5chQbJCrNlYx+5cuQoN
        k3VIXTAlcuWo1gFeuSVPDhcuTPwVejTDvIR9LELlyl9Hfhc6rISTHC65cqRIyFj1UQuXKgEcHIjDlcuQ
        YUNsOLK171y5KMUl6i+65ciBg5auXLkQH//Z
</value>
  </data>
</root>